<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.answer.base.dao.HoleCommentMapper">
    <resultMap id="HoleCommentMap" type="HoleComment">
        <id column="id" property="id" jdbcType="INTEGER"></id>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"></result>
        <result column="user_name" property="userName" jdbcType="VARCHAR"></result>
        <result column="avatar_url" property="userAvatar" jdbcType="VARCHAR"></result>
        <collection property="child" column="id" select="getChild" ofType="com.answer.base.entity.HoleComment"></collection>
    </resultMap>

    <select id="getHoleCommentByHid" parameterType="INTEGER" resultMap="HoleCommentMap">
        select c.id,c.content,c.create_time,c.uid,u.user_name,u.avatar_url from hole_comment c join user u ON u.id=c.uid where c.pid=0 and c.hid=#{hid} and c.delete_time is null
    </select>
    
    <select id="getChild" parameterType="INTEGER" resultMap="HoleCommentMap">
        select c.id,c.content,c.create_time,c.uid,u.user_name,u.avatar_url,r.user_name as userName_r,r.avatar_url as avatarUrl_r from hole_comment c join user u ON u.id=c.uid join user r ON c.uid_r=r.id where c.pid=#{id} and c.delete_time is null
    </select>

    <insert id="insertHoleComment" parameterType="com.answer.base.entity.HoleComment" useGeneratedKeys="true" keyProperty="id">
        insert into
        <trim prefix="hole_comment(" suffix=")" suffixOverrides=",">
            hid,content,uid,
            <if test="uid_r!=null">
                uid_r,
            </if>
            <if test="pid!=null">
                pid
            </if>
        </trim>
        <trim prefix="values(" suffix=")" suffixOverrides=",">
            #{hid},#{content},#{uid},
            <if test="uid_r!=null">
                #{uid_r},
            </if>
            <if test="pid!=null">
                #{pid}
            </if>
        </trim>
    </insert>

    <update id="delHoleComment" parameterType="com.answer.base.dto.UidAndIdDTO">
        update hole_comment
        <set>
            delete_time = current_timestamp
        </set>
        where id=#{id} and uid=#{uid}
    </update>
    <update id="powerDelHoleComment">
        update hole_comment
        <set>
            delete_time = current_timestamp
        </set>
        where id=#{id}
    </update>
</mapper>